<#@ template language="VB" hostspecific="true" compilerOptions="/optionexplicit /optionstrict /optioninfer"#>
<#
' Copyright © 2013 Ermin Robert Alegrid
' 
' Licensed under the Microsoft Reciprocal License (the "License");
' you may not use this file except in compliance with the License.
' You may obtain a copy of the License at
'
'    http://www.microsoft.com/en-us/openness/licenses.aspx
'
' Unless required by applicable law or agreed to in writing, software
' distributed under the License is distributed on an "AS IS" BASIS,
' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
' See the License for the specific language governing permissions and
' limitations under the License.
#>
<#@ output extension=".xml" encoding="utf-8" #>
<#@ include file="GitSourceControlInfo.ttinclude" #>
<#@ include file="XmlProjectInfo.ttinclude" #>
<#@ assembly name="System.Windows.Forms" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Xml.Linq" #>
<#@ import namespace="System.Windows.Forms" #>
<#
	Dim XPI As New XmlProjectInfo("ProjectInfo.props")
	Dim GSCI As New GitSourceControlInfo()

	Dim Ver = New Version(XPI.Version.Major, XPI.Version.Minor, XPI.Version.Build, GSCI.Revision)

	'Sub SaveOutput(ByVal Filename As String)
  '  Dim templateDirectory = Path.GetDirectoryName(Host.TemplateFile)
  '  Dim outputFilePath = Path.Combine(templateDirectory, outputFileName)
  '  File.WriteAllText(outputFilePath, Me.GenerationEnvironment.ToString())
  '
	'  Me.GenerationEnvironment.Remove(0, Me.GenerationEnvironment.Length)
  'End Sub
	Dim TemplateFilePath = Host.ResolvePath(Host.TemplateFile)
	Dim TemplateFileDir = Path.GetDirectoryName(TemplateFilePath)
	If TemplateFileDir.Length = 0 Then

		TemplateFileDir = Path.GetPathRoot(TemplateFilePath)

	End If

	Dim OutputFilename = Path.Combine(TemplateFileDir,
			Path.GetFileNameWithoutExtension(TemplateFilePath)  & ".xml")

	If File.Exists(OutputFilename) Then
		MessageBox.Show(File.ReadAllText(OutputFilename, System.Text.Encoding.UTF8))
	Else
		MessageBox.Show(OutputFilename & " not found")
	End If


#>
<?xml version="1.0"?>
<LastBuildVersion><#= Ver.ToString() #></LastBuildVersion>